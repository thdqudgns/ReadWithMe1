<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="web.user.dao.face.MyReviewDao">

	<sql id="selectReview">
		SELECT
			review_no, user_no, nick, review_title
			, review_content, review_date, review_views
		FROM review
	</sql>

	<sql id="whereTitleSearch">
		WHERE REVIEW_TITLE LIKE '%' || #{search} || '%'
	</sql>
	
	<sql id="whereReviewNo">
		WHERE review_no = #{review_no}	
	</sql>

	<!-- 글 개수 세기 -->  
	<select id="selectCntAll" resultType="int" parameterType="web.util.Paging">
		SELECT COUNT(*) FROM (
			<include refid="selectReview"/>
			<include refid="whereTitleSearch"/>
		)
	</select>
	
	<!-- 글 전체 목록 조회 -->
	<select id="selectList" resultType="web.user.dto.Review" parameterType="map">
		SELECT * FROM (
			SELECT rownum rnum, R.* FROM (
				<include refid="selectReview"/>
				<include refid="whereTitleSearch"/>
				and user_no = #{userNo}
				ORDER BY review_no DESC
			) R
		) R
		WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="hit" parameterType="web.user.dto.Review">
		UPDATE review
		SET review_views = review_views + 1
		<include refid="whereReviewNo"/>
	</update>
	
	<!-- 글번호로 글정보 조회 -->
	<select id="selectReviewByReviewNo" resultType="web.user.dto.Review" parameterType="web.user.dto.Review">
		<include refid="selectReview"/>
		<include refid="whereReviewNo"/>
	</select>
	
	<!-- <select id="getFileNo" resultType="web.user.dto.Review_file" parameterType="web.user.dto.Review">
		SELECT file_no
		FROM review_file
		<include refid="whereReviewNo"/>
	</select> -->
	
	<!-- 글번호로 파일정보 조회 -->
	<select id="selectReviewfileByReviewNo" resultType="web.user.dto.Review_file" parameterType="web.user.dto.Review">
		SELECT
			file_no, review_no, origin_name, stored_name
		FROM review_file
		WHERE review_no = #{review_no}
	</select>
	
	<!-- 글 삽입 -->
	<insert id="insertReview" parameterType="web.user.dto.Review">		
		INSERT INTO review ( review_no, review_title, review_content, user_no, nick )
		VALUES ( review_seq.nextval, #{review_title}, #{review_content}, #{user_no}, #{nick} )
	</insert>
	
	<!-- 파일 삽입 -->
	<insert id="insertFile" parameterType="web.user.dto.Review_file">
		INSERT INTO review_file ( file_no, review_no, origin_name, stored_name )
		VALUES ( review_file_seq.nextval, #{review_no}, #{origin_name}, #{stored_name} ) 
	</insert>
	
	<!-- 파일번호로 파일정보 조회 -->
	<select id="selectReviewfileByFileno" resultType="web.user.dto.Review_file" parameterType="int">
		SELECT
			file_no, review_no, origin_name, stored_name
		FROM review_file
		WHERE file_no = #{file_no}
	</select>
	
	<!-- 글 수정 -->
	<update id="update" parameterType="web.user.dto.Review">
		UPDATE review
		SET review_title = #{review_title }
			, review_content = #{review_content }
		WHERE review_no = #{review_no }
	</update>

	<!-- 파일 삭제 -->
	<delete id="deleteFile" parameterType="web.user.dto.Review">
		DELETE review_file
		WHERE review_no = #{review_no}
	</delete>
	
	<!-- 글 삭제 -->
	<delete id="delete" parameterType="web.user.dto.Review">
		DELETE review
		WHERE review_no = #{review_no}
	</delete>
	
	<!-- 최근 글번호 조회 -->
	<select id="lastReviewNo" resultType="int">
		SELECT review_no 
		FROM review 
		WHERE review_no = (select max(review_no) from review)
	</select>
	
</mapper>


















