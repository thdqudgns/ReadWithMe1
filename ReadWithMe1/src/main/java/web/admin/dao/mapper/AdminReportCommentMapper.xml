<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="web.admin.dao.face.AdminReportCommentDao">
 
	<sql id="selectRptCmt">
		SELECT
			report_no, user_no, penalty, dele
			, comment_no, report_content, report_date
		FROM Rpt_cmt
	</sql>
	
	<!-- 댓글 개수 세기 -->
	<select id="selectCntAll" resultType="int" parameterType="web.util.Paging">
		SELECT COUNT(*) FROM (
			<include refid="selectRptCmt"/>
		)
	</select>
	
	<!-- 댓글 전체 목록 조회 -->
	<select id="selectList" resultType="web.user.dto.Rpt_cmt" parameterType="web.util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, R.* FROM (
				<include refid="selectRptCmt"/>
				ORDER BY report_no DESC
			) R
		) R
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<!-- 신고댓글 번호로 댓글 번호 가져오기 -->
 	<select id="getCommentNo" resultType="web.user.dto.Rpt_cmt" parameterType="web.user.dto.Rpt_cmt">
 		SELECT report_no, comment_no
 		FROM Rpt_cmt
 		WHERE report_no = #{report_no}
 	</select>
	
	<!-- 댓글 번호로 댓글 정보 가져오기 -->
 	<select id="getComment" resultType="web.user.dto.Rv_cmt" parameterType="int">
 		SELECT comment_no, review_no, user_no, nick, comment_content, comment_write_date
 		FROM Rv_cmt
 		WHERE comment_no = #{comment_no}
 	</select>
	
	<!-- 회원제재: 블랙리스트로 만들기 --> 
 	<update id="changeUser_lv" parameterType="int">
 		UPDATE usertb
 		SET user_lv = 0
 		WHERE user_no = #{user_no}
 	</update>
	
	<!-- 댓글 삭제 -->
 	<delete id="deleteComment" parameterType="web.user.dto.Rv_cmt">
 		DELETE Rv_cmt
 		WHERE comment_no = #{comment_no}
 	</delete>
	
	<!-- 삭제 확인 -->
 	<select id="countComment" resultType="int" parameterType="web.user.dto.Rv_cmt">
 		SELECT count(*)
 		FROM Rv_cmt
 		WHERE comment_no = #{comment_no}
 	</select>
	
	<!-- 해당 댓글 번호의 댓글 지운 것 확인 -->
 	<update id="updateDeleC" parameterType="web.user.dto.Rv_cmt">
 		UPDATE Rpt_cmt
 		SET dele = 1
 		WHERE comment_no = #{comment_no}
 	</update>
	
	<!-- Ban 처리 -->
 	<insert id="insertBan" parameterType="web.user.dto.Ban">
      INSERT INTO ban (ban_no, user_no, end_ban)
      VALUES (ban_seq.nextval, #{user_no }, to_char(sysdate + 30, 'YYYY/MM/DD') )
   	</insert>
	
	
	
 
 
 
 
 
 </mapper>