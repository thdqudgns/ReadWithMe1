<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="web.admin.dao.face.AdminReportDao">
 
   	<sql id="selectRpt">
		SELECT
			report_no, user_no, penalty, dele
			, famous_no, review_no, report_content, report_date
		FROM Rpt_board
	</sql>

 	<!-- 글 개수 세기 -->  
	<select id="selectCntAll" resultType="int" parameterType="web.util.Paging">
		SELECT COUNT(*) FROM (
			<include refid="selectRpt"/>
		)
	</select>
 	
 	<!-- 글 전체 목록 조회 -->
	<select id="selectList" resultType="web.user.dto.Rpt_board" parameterType="web.util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, R.* FROM (
				<include refid="selectRpt"/>
				ORDER BY report_no DESC
			) R
		) R
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
 
 	<!-- 신고글 번호로 게시글 번호 가져오기 -->
 	<select id="getBoardNo" resultType="web.user.dto.Rpt_board" parameterType="web.user.dto.Rpt_board">
 		SELECT report_no, famous_no, review_no
 		FROM Rpt_board
 		WHERE report_no = #{report_no}
 	</select>
 
 	<!-- 게시글 번호로 게시글 정보 가져오기: 명언 -->
 	<select id="getFamous" resultType="web.user.dto.Famous" parameterType="int">
 		SELECT famous_no, user_no, nick, famous_content, famous_date
 		FROM Famous
 		WHERE famous_no = #{famous_no}
 	</select>
 
 	<!-- 게시글 번호로 게시글 정보 가져오기: 후기 -->
 	<select id="getReview" resultType="web.user.dto.Review" parameterType="int">
 		SELECT review_no, user_no, nick, review_title, review_content, review_date, review_views
 		FROM review
 		WHERE review_no = #{review_no}
 	</select>
 
	<!-- 회원제재: 블랙리스트로 만들기 --> 
 	<update id="changeUser_lv" parameterType="int">
 		UPDATE usertb
 		SET user_lv = 0
 		WHERE user_no = #{user_no}
 	</update>
 	
<!--  	<update id="updatePenalty" parameterType="int"> -->
<!--  		UPDATE Rpt_board -->
<!--  		SET penalty = 1 -->
<!--  		WHERE user_no = #{user_no} -->
<!--  	</update> -->
 
 	<!-- 명언글 삭제 -->
 	<delete id="deleteFamous" parameterType="web.user.dto.Famous">
 		DELETE famous
 		WHERE famous_no = #{famous_no}
 	</delete>
 	
 	<!-- 삭제 확인 -->
 	<select id="countFamous" resultType="int" parameterType="web.user.dto.Famous">
 		SELECT count(*)
 		FROM famous
 		WHERE famous_no = #{famous_no}
 	</select>
 	
 	<!-- 후기글 삭제 -->
 	<delete id="deleteReview" parameterType="web.user.dto.Review">
 		DELETE review
 		WHERE review_no = #{review_no}
 	</delete>
 	
 	<!-- 삭제 확인 -->
 	<select id="countReview" resultType="int" parameterType="web.user.dto.Review">
 		SELECT count(*)
 		FROM review
 		WHERE review_no = #{review_no}
 	</select>
 	
 	<!-- 해당 게시글 번호의 글 지운 것 확인 -->
 	<update id="updateDeleF" parameterType="web.user.dto.Famous">
 		UPDATE Rpt_board
 		SET dele = 1
 		WHERE famous_no = #{famous_no}
 	</update>
 	
 	<!-- 해당 게시글 번호의 글 지운 것 확인 -->
 	<update id="updateDeleR" parameterType="web.user.dto.Review">
 		UPDATE Rpt_board
 		SET dele = 1
 		WHERE review_no = #{review_no}
 	</update>
 	
 	<!-- Ban 처리 -->
 	<insert id="insertBan" parameterType="web.user.dto.Ban">
      INSERT INTO ban (ban_no, user_no, end_ban)
      VALUES (ban_seq.nextval, #{user_no }, to_char(sysdate + 30, 'YYYY/MM/DD') )
   	</insert>
 
 
 
 
 
 
 </mapper>